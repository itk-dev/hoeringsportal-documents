# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    env(VIEW_TIMEZONE): 'UTC'

    locale: 'en'

    edoc_ws_url: '%env(EDOC_WS_URL)%'
    edoc_ws_username: '%env(EDOC_WS_USERNAME)%'
    edoc_ws_password: '%env(EDOC_WS_PASSWORD)%'
    edoc_user_identifier: '%env(EDOC_USER_IDENTIFIER)%'
    edoc_project_id: '%env(EDOC_PROJECT_ID)%'

    sharefile_hostname: '%env(SHAREFILE_HOSTNAME)%'
    sharefile_client_id: '%env(SHAREFILE_CLIENT_ID)%'
    sharefile_secret: '%env(SHAREFILE_SECRET)%'
    sharefile_username: '%env(SHAREFILE_USERNAME)%'
    sharefile_password: '%env(SHAREFILE_PASSWORD)%'
    sharefile_root_id: '%env(SHAREFILE_ROOT_ID)%'

    deskpro_url: '%env(DESKPRO_URL)%'
    deskpro_api_code_key: '%env(DESKPRO_API_CODE_KEY)%'

    mailer_user: 'info@sharefile2edoc.example.com'

    view_timezone: '%env(VIEW_TIMEZONE)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Inject the archiver repository into all commands.
    App\Command\Edoc\CasesCommand:
        calls:
            - method: setArchiverRepository
              arguments:
                  - '@App\Repository\ArchiverRepository'

    App\Command\Edoc\ItemListCommand:
        calls:
            - method: setArchiverRepository
              arguments:
                  - '@App\Repository\ArchiverRepository'

    App\Command\ShareFile2eDoc\ArchiveCommand:
        calls:
            - method: setArchiverRepository
              arguments:
                  - '@App\Repository\ArchiverRepository'
